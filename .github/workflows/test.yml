name: CI - Test changes

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[dev, test]'
          # pip install pytest pytest-cov diff-cover

      - name: Run tests with coverage
        run: |
          pytest --cov=modulargeofm --cov-report=xml
      
      - name: Check diff coverage (only new/changed code)
        id: diffcheck
        continue-on-error: true
        run: |
          diff-cover coverage.xml --compare-branch=origin/main --fail-under=85 > diff_output.txt || echo "diff-cover failed" >> diff_output.txt
          cat diff_output.txt
      
      - name: Generate HTML diff coverage report
        if: always()
        run: |
          diff-cover coverage.xml --compare-branch=origin/main --html-report diff-cover.html

      - name: Upload HTML diff coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
         name: diff-coverage-report
         path: diff-cover.html

      - name: Comment diff coverage summary on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('diff_output.txt', 'utf8');

            const body = `
            ðŸ§ª **Diff Coverage Report**
            \`\`\`
            ${summary.trim()}
            \`\`\`

            ðŸ’¾ [Download full HTML diff coverage report](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
            `;

            // Check if a previous comment exists
            const { data: comments } = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: context.issue.number,
            });

            const previous = comments.find(c => c.user.login === 'github-actions[bot]' && c.body.includes('Diff Coverage Report'));

            if (previous) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: previous.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body,
              });
            }

      - name: Fail if diff coverage below threshold
        if: steps.diffcheck.outcome != 'success'
        run: exit 1
